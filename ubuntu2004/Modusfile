# base image ubuntu 20:04
base_image :-
  from("ubuntu:20.04").

#-------------------------------------------------------------------------------------------------

# install packages git wget cmake
install_packages :-
  run("apt update && apt install -y git"),
  run("apt install -y wget"),
  install_dependencies,
  # run("DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC apt-get install -y cmake").
  install_cmake.


# build essentials (which is also required by f1x)
install_dependencies :-
  run("DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC apt install -y build-essential gcovr zlib1g-dev libtinfo-dev"),
  run("apt install -y libboost-filesystem-dev libboost-program-options-dev libboost-log-dev").


# install cmake --version 3.5.1
install_cmake:-
  run("wget https://cmake.org/files/v3.5/cmake-3.5.1.tar.gz"),
  run("tar xf cmake-3.5.1.tar.gz"),
  (
    run("./configure"),
    run("make"),
    run("make install")
  )::in_workdir("/cmake-3.5.1").


#--------------------------------------------------------------------------------------------------


# install python, pip and install essential packages
install_python :-
  run("apt install -y python3 python3-pip"),
  pip_install.

# pip install essential packages
pip_install :-
  run("pip3 install docker"),
  run("pip3 install more_itertools"),
  run("pip3 install pre-commit").
  
#--------------------------------------------------------------------------------------------------

copy_patchprocess:-
  run("mkdir cerberus"),
  copy("./cerberus", "/cerberus").


#--------------------------------------------------------------------------------------------------

# build f1x
build_tool("f1x") :-
  clone_tool("f1x"),
  clone_llvm.


clone_tool("f1x") :-
  run("mkdir /home/f1x_tool"),
  run("git clone https://github.com/mechtaev/f1x.git /home/f1x_tool").
  
clone_llvm :-
  copy("./llvm-3.8.1.tar.xz", "/"),
  run("tar xf llvm-3.8.1.tar.xz").

#-------------------------------------------------------------------------------------------------

environments(tool) :-
  base_image,
  install_packages,
  # install_python,
  # copy_patchprocess,
  build_tool(tool).

  
